stages:
  - package-release
  - deployment

cache:
  policy: pull
  untracked: false
  key: ${CI_COMMIT_REF_SLUG}
  key:
    files:
      - yarn.lock
  paths:
    - node_modules/

.auth_step:
  timeout: 30m
  image: google/cloud-sdk:latest
  tags:
    - runner-two
  variables:
    ARTIFACT_FILENAME: "./artifacts-${CI_PROJECT_NAME}-${CI_PIPELINE_ID}.txt"
  artifacts:
    when: always
    expire_in: 1 week
    name: "${CI_JOB_ID}-${CI_JOB_NAME}"
    untracked: false
    paths:
      - ${ARTIFACT_FILENAME}
    exclude:
      - gcloud-service-key.json
  before_script:
    - echo ${GCP_SERVICE_ACCOUNT} > gcloud-service-key.json
    - gcloud auth activate-service-account --key-file gcloud-service-key.json
    - gcloud auth configure-docker ${GCP_REGISTRY} --quiet
    - gcloud config set project ${GCP_PROJECT_ID}

.deploy:
  extends:
    - .auth_step
  before_script:
    - whoami
    - cat /etc/os-release
    - sudo groupadd docker || true
    - sudo usermod -aG docker ${USER} || true
    - . ~/.bashrc || true
  script:
    - docker build . -t ${GCP_REGISTRY}/${GCP_PROJECT_ID}/${CI_PROJECT_NAME}:${CI_PIPELINE_ID}
    - docker push ${GCP_REGISTRY}/${GCP_PROJECT_ID}/${CI_PROJECT_NAME}:${CI_PIPELINE_ID}
    - >
      echo "Image ID: ${GCP_REGISTRY}/${GCP_PROJECT_ID}/${CI_PROJECT_NAME}:${CI_PIPELINE_ID}" 
      >> ${ARTIFACT_FILENAME}
    - printf "\n" >> ${ARTIFACT_FILENAME}
    - "cat ${ARTIFACT_FILENAME}"
    - gcloud run deploy ${CI_PROJECT_NAME}-${CI_COMMIT_BRANCH} >-
      --image ${GCP_REGISTRY}/${GCP_PROJECT_ID}/${CI_PROJECT_NAME}:${CI_PIPELINE_ID}
      --port ${PORT} --region ${GCP_REGION} --platform managed --allow-unauthenticated --service-account=${CR_SERVICE_ACCOUNT}
    - >
      gcloud run services describe ${CI_PROJECT_NAME}-${CI_COMMIT_BRANCH}
      --region ${GCP_REGION} | head -n 10 >> ${ARTIFACT_FILENAME}
    - printf "\n" >> ${ARTIFACT_FILENAME}
    - "cat ${ARTIFACT_FILENAME}"

publish:
  stage: package-release
  tags:
    - runner-two
  only:
    - master
  artifacts:
    when: always
    expire_in: 1 week
  cache:
    policy: pull
    untracked: false
    key: $CI_COMMIT_REF_SLUG
    key:
      files:
        - yarn.lock
    paths:
      - node_modules/
  before_script:
    - echo "@${CI_PROJECT_ROOT_NAMESPACE}:registry=${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/npm/" > .npmrc
    - echo "${CI_API_V4_URL#https?}/projects/${CI_PROJECT_ID}/packages/npm/:_authToken=\${CI_JOB_TOKEN}" >> .npmrc
  script:
    - yarn install
    - yarn publish:build
    - npx semantic-release

deployment:
  stage: deployment
  extends:
    - .deploy
  only:
    - staging
    - master