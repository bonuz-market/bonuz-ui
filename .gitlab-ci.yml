image: node:latest
stages:
  - package-release
publish:
  stage: package-release
  tags: 
    - runner-one
  only: 
    - release
  environment: 
    name: release
  artifacts:
    when: always
    expire_in: 15 days
  before_script:
    ## Fetch tags ##
    - git fetch --all --tags
    - git tag --sort v:refname
    ## Grab latest git tag and replace the version value in package.json ##
    - export GITOLDRAW=$(git tag --sort v:refname | tail -n2 | head -n 1) || true
    - env | grep "GITOLDRAW"
    - export GITNEWRAW=$(git tag --sort v:refname | tail -n1) || true
    - env | grep "GITNEWRAW"
    - sed -i "s/$GITOLDRAW/$GITNEWRAW/" package.json || true
    - head -n 5 package.json
  script:
    - echo "@bonuz:registry https://code.bonuz.team/api/v4/projects/18/packages/npm/" > .npmrc
    - echo "//code.bonuz.team/api/v4/projects/18/packages/npm/:_authToken=${NPM_TOKEN}" >> .npmrc
    - cat .npmrc
    # This following command is based on the information on yarnPath' key value on .yarnrc.yml
    - yarn set version 3.2.0
    - yarn -v
    - yarn install
    # - yarn publish:build
    # For testing purposes, uncomment following line
    - npm publish --dry-run
    # ONLY uncomment following line once the publish workflow is usable!
    # - npm publish --dry-run