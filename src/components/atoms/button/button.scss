@use '../../../assets/styles/variables' as v;
@use '../../../assets/styles/utils' as utils;

$color-background: var(--color-base-10);
$color-background-disabled: var(--color-base-20);
$color-background-stroke: v.$color-main-bg;
$color-gradient-1: linear-gradient(
  270deg,
  var(--gradient-color-1),
  var(--gradient-color-2)
);
$color-gradient-2: linear-gradient(
  90deg,
  var(--gradient-color-1),
  var(--gradient-color-3)
);
$color-gradient-3: linear-gradient(
  90deg,
  var(--gradient-color-1),
  var(--gradient-color-2)
);
$color-gradient-4: linear-gradient(
  90deg,
  var(--gradient-color-2),
  var(--gradient-color-3)
);

.button {
  button {
    overflow: hidden;
    position: relative;
    display: flex;
    flex-direction: row;
    justify-content: center;
    align-items: center;
    border: none;
    cursor: pointer;
    border-radius: 8px;
    background-color: $color-background;
    transition: 0.2s ease;
    padding: 0;

    a {
      z-index: 5;
    }

    span {
      @include utils.font(
        $size: v.$font-size-medium,
        $weight: v.$font-weight-medium
      );

      display: flex;
      align-items: center;
      text-transform: capitalize;
      padding: 15px 30px;
      white-space: nowrap;
      z-index: 3;
    }

    &:disabled {
      opacity: 0.6;
      cursor: default;
    }

    &:hover:not(:disabled) {
      background-color: $color-background-disabled;
    }
  }

  &--fill {
    button {
      &::before,
      &::after {
        content: '';
        position: absolute;
        left: 0;
        top: 0;
        width: 100%;
        height: 100%;
        transition: 0.6s;
        z-index: 2;
      }

      &::before {
        background: $color-gradient-1;
        opacity: 1;
      }

      &::after {
        background: $color-gradient-2;
        opacity: 0;
      }

      &:hover:not(:disabled) {
        background-color: inherit;
      }

      &:hover:not([data-disabled='true'])::after,
      &:hover:not(:disabled)::after {
        opacity: 1;
      }

      &:hover:not([data-disabled='true'])::before,
      &:hover:not(:disabled)::before {
        opacity: 0;
      }
    }
  }

  &--stroke {
    position: relative;
    background: $color-background-stroke;
    border-radius: 10px;
    width: 184px;
    height: 56px;

    button {
      width: 100%;
      height: 100%;
      background-color: transparent;
      padding: inherit;
      border-radius: 10px;

      &:hover:not(:disabled) {
        background-color: inherit;
      }
    }

    &::before,
    &::after {
      content: '';
      position: absolute;
      top: -1px;
      bottom: -1px;
      left: -1px;
      right: -1px;
      z-index: -1;
      border-radius: 10px;
      transition: 0.6s;
    }

    &::before {
      background: $color-gradient-4;
      opacity: 1;
    }

    &::after {
      background: $color-gradient-3;
      opacity: 0;
    }

    &:hover:not([data-disabled='true'])::after,
    &:hover:not(:disabled)::after {
      opacity: 1;
    }

    &:hover:not([data-disabled='true'])::before,
    &:hover:not(:disabled)::before {
      opacity: 0;
    }
  }

  &__group {
    .button {
      &--fill {
        button {
          width: 219px;
          height: 56px;
          padding: inherit;
        }
      }

      &--stroke {
        margin-left: 30px;

        [dir='rtl'] & {
          margin-left: 0;
          margin-right: 30px;
        }
      }
    }
  }
}

@media screen and (max-width: 1050px) {
  .button {
    &__group {
      .button {
        &--fill {
          button {
            width: 150px;
          }
        }
      }
    }

    &--stroke {
      min-width: 140px;
      width: 140px;
    }
  }
}
